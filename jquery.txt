

一、插件编写
1、

jQuery.fn.myPlugin = function() {
  //在这里做你真正插件要做的事情
};
2、
更好的做法是采用下面的写法，这样就能在函数体内自由使用美元符号（$）。
代码的最前面有一个分号，这是为了防止多个脚本文件合并时，其他脚本的结尾语句没有添加分号，造成运行时错误。
;(function ($){
  $.fn.myPlugin = function (){
    //DO
  };
})(jQuery);

3、有时，还可以把顶层对象（window）作为参数输入，这样可以加快代码的执行速度和执行更有效的最小化操作。

;(function ($, window) {
  $.fn.myPlugin = function() {
    // Do 
  };
}(jQuery, window));




取消事件的默认动作。

语法
 event.preventDefault()
说明
 
该方法将通知 Web 浏览器不要执行与事件关联的默认动作（如果存在这样的动作）。例如，如果 type 属性是 "submit"，在事件传播的任意阶段可以调用任意的事件句柄，通过调用该方法，可以阻止提交表单。注意，如果 Event 对象的 cancelable 属性是 fasle，那么就没有默认动作，或者不能阻止默认动作。无论哪种情况，调用该方法都没有作用。




function Palert()
{
 var def = $.Deferred();
def.resolve();
return def.promise();
 
}


jQuery.extend(object); 为扩展jQuery类本身.为类添加新的方法。
 
jQuery.fn.extend(object);给jQuery对象添加方法。

 $(function () {
            $.extend({
                alertCickA: function () { alert("aa"); }
            });
            $.alertCickA();//调用方式
            $.fn.extend({
                alertCickB: function () {
                    alert("dd");
                }
            }); 
            $("aa").alertCickB();//调用方式
        });


//
var def= $.Deferred(); // 新建一个Deferred对象 //三种执行状态- -未完成，已完成和已失败。

def.resolve(可以传参数的哦);//将ddef对象的执行状态从"未完成"改为"已完成"，从而触发done()方法。
def.reject();//将def对象的执行状态从"未完成"改为"已失败"，从而触发fail()方法。
def.promise(); //在原来的deferred对象上返回另一个deferred对象，后者只开放与改变执行状态无关的方法（比如done()方法和fail()方法），屏蔽与改变执行状态有关的方法（比如resolve()方法和reject()方法），从而使得执行状态不能被改变。






